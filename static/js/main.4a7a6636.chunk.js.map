{"version":3,"sources":["logo.svg","Component/Navbar.js","Component/MyCard.js","api/Api.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","Toolbar","IconButton","color","Typography","variant","MyCard","match","useState","detail","setDetails","open","setOpen","handleClick","id","url","fetch","then","respone","json","catch","error","console","log","getMatchDetail","data","handleOpen","handleClose","Card","style","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","width","src","alt","CardActions","Button","onClick","unique_id","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","alert","className","sm","map","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a7a6636.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nconst Navbar = ()=>{\r\n    return (\r\n        <AppBar>\r\n        <Toolbar>\r\n            <IconButton color=\"inherit\">\r\n                <MenuIcon/>\r\n            </IconButton>\r\n            <Typography variant=\"h6\">Live Score</Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n    )\r\n};\r\nexport default Navbar;","\r\nimport { Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Typography } from '@material-ui/core';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { getMatchDetail, getMatches } from '../api/Api';\r\n\r\nconst MyCard = ({ match }) => {\r\n\r\n    const [detail, setDetails] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = (id) => {\r\n        getMatchDetail(id)\r\n            .then((data) => {\r\n                console.log(\"match data\", data)\r\n                setDetails(data);\r\n                handleOpen();\r\n            })\r\n            .catch((error) => console.log(\"Error \", error));\r\n    };\r\n\r\n    const getMatchCard = () => {\r\n\r\n        return (\r\n            <Card style={{ marginTop: 25 }}>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h5\" >{match[\"team-1\"]}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <img\r\n                                style={{ width: 85 }}\r\n                                src=\"img/vs.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h5\">{match[\"team-2\"]}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify=\"center\">\r\n                        <Button\r\n                            onClick={() => {\r\n                                handleClick(match.unique_id);\r\n                            }}\r\n                            variant=\"contained\" color=\"primary\">\r\n                            Show Details\r\n                        </Button>\r\n                        <Button style={{ marginLeft: 5 }} variant=\"contained\" color=\"primary\">\r\n                            Start Time {new Date(match.dateTimeGMT).toLocaleString()}\r\n                        </Button>\r\n                    </Grid>\r\n                </CardActions>\r\n\r\n            </Card>\r\n        );\r\n\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const getDialog = () => (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Match Detail...\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{detail.stat}</Typography>\r\n            <Typography>\r\n              Match:\r\n              <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n                {detail.matchStarted ? \"Started\" : \"Still not started\"}y\r\n              </span>\r\n            </Typography>\r\n            <Typography>\r\n              Score:\r\n              <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n                {\" \"}\r\n                {detail.score}\r\n              </span>\r\n            </Typography>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n    return (\r\n    <Fragment>\r\n        {getMatchCard()}\r\n        {getDialog()}\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nexport default MyCard;","const API_KEY = 'Y4RIa6rPIKaKsLFMOcdRy1RlVeZ2';\r\n\r\nexport const getMatches=()=> {\r\n    const url='https://cricapi.com/api/matches?apikey=Y4RIa6rPIKaKsLFMOcdRy1RlVeZ2';\r\n\r\n    return fetch(url)\r\n    .then((respone) => respone.json())\r\n    .catch((error)=>console.log(\"Error \",error));\r\n};\r\n\r\n//Load match details\r\nexport const getMatchDetail=(id)=> {\r\n    const url=`http://cricapi.com/api/cricketScore?unique_id=${id}&apikey=${API_KEY}`;\r\n\r\n    return fetch(url)\r\n    .then((respone) => respone.json())\r\n    .catch((error)=>console.log(\"Error \",error));\r\n};\r\n","import React, { Fragment, useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport Navbar from './Component/Navbar';\nimport MyCard from './Component/MyCard';\nimport { getMatches } from './api/Api';\n\n\nfunction App() {\n\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    getMatches()\n      .then((data) => {\n        setMatches(data.matches);\n        console.log(data.matches);\n      })\n      .catch((error) => alert(\"could not load data\"));\n  }, []);\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <br></br>\n      <br></br>\n      <Typography variant=\"h4\" style={{ marginTop: 50 }}>Welcome to my live score App</Typography>\n      <Grid container>\n        <Grid sm=\"2\"></Grid>\n        <Grid sm=\"8\">\n          {\n            matches.map((match) => (\n              <Fragment key={match.unique_id}>\n                {\n                  match.type == \"Twenty20\" ? (<MyCard match={match} />) : (\"\")\n                }\n              </Fragment>\n            ))\n          }\n        </Grid>\n\n      </Grid>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}